/****************************************************************************
** Meta object code from reading C++ file 'fcitxinterface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "fcitxinterface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'fcitxinterface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_FcitxInputMethodProxy_t {
    QByteArrayData data[45];
    char stringdata0[580];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FcitxInputMethodProxy_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FcitxInputMethodProxy_t qt_meta_stringdata_FcitxInputMethodProxy = {
    {
QT_MOC_LITERAL(0, 0, 21), // "FcitxInputMethodProxy"
QT_MOC_LITERAL(1, 22, 14), // "ReloadConfigUI"
QT_MOC_LITERAL(2, 37, 0), // ""
QT_MOC_LITERAL(3, 38, 10), // "ActivateIM"
QT_MOC_LITERAL(4, 49, 19), // "QDBusPendingReply<>"
QT_MOC_LITERAL(5, 69, 9), // "Configure"
QT_MOC_LITERAL(6, 79, 14), // "ConfigureAddon"
QT_MOC_LITERAL(7, 94, 5), // "addon"
QT_MOC_LITERAL(8, 100, 11), // "ConfigureIM"
QT_MOC_LITERAL(9, 112, 2), // "im"
QT_MOC_LITERAL(10, 115, 8), // "CreateIC"
QT_MOC_LITERAL(11, 124, 42), // "QDBusPendingReply<int,uint,ui..."
QT_MOC_LITERAL(12, 167, 15), // "QDBusReply<int>"
QT_MOC_LITERAL(13, 183, 5), // "uint&"
QT_MOC_LITERAL(14, 189, 7), // "keyval1"
QT_MOC_LITERAL(15, 197, 6), // "state1"
QT_MOC_LITERAL(16, 204, 7), // "keyval2"
QT_MOC_LITERAL(17, 212, 6), // "state2"
QT_MOC_LITERAL(18, 219, 10), // "CreateICv2"
QT_MOC_LITERAL(19, 230, 47), // "QDBusPendingReply<int,bool,ui..."
QT_MOC_LITERAL(20, 278, 7), // "appname"
QT_MOC_LITERAL(21, 286, 5), // "bool&"
QT_MOC_LITERAL(22, 292, 6), // "enable"
QT_MOC_LITERAL(23, 299, 10), // "CreateICv3"
QT_MOC_LITERAL(24, 310, 3), // "pid"
QT_MOC_LITERAL(25, 314, 4), // "Exit"
QT_MOC_LITERAL(26, 319, 12), // "GetCurrentIM"
QT_MOC_LITERAL(27, 332, 26), // "QDBusPendingReply<QString>"
QT_MOC_LITERAL(28, 359, 15), // "GetCurrentState"
QT_MOC_LITERAL(29, 375, 22), // "QDBusPendingReply<int>"
QT_MOC_LITERAL(30, 398, 12), // "GetCurrentUI"
QT_MOC_LITERAL(31, 411, 10), // "GetIMAddon"
QT_MOC_LITERAL(32, 422, 12), // "GetIMByIndex"
QT_MOC_LITERAL(33, 435, 5), // "index"
QT_MOC_LITERAL(34, 441, 12), // "InactivateIM"
QT_MOC_LITERAL(35, 454, 17), // "ReloadAddonConfig"
QT_MOC_LITERAL(36, 472, 12), // "ReloadConfig"
QT_MOC_LITERAL(37, 485, 11), // "ResetIMList"
QT_MOC_LITERAL(38, 497, 7), // "Restart"
QT_MOC_LITERAL(39, 505, 12), // "SetCurrentIM"
QT_MOC_LITERAL(40, 518, 8), // "SwitchIM"
QT_MOC_LITERAL(41, 527, 8), // "ToggleIM"
QT_MOC_LITERAL(42, 536, 9), // "CurrentIM"
QT_MOC_LITERAL(43, 546, 6), // "IMList"
QT_MOC_LITERAL(44, 553, 26) // "FcitxQtInputMethodItemList"

    },
    "FcitxInputMethodProxy\0ReloadConfigUI\0"
    "\0ActivateIM\0QDBusPendingReply<>\0"
    "Configure\0ConfigureAddon\0addon\0"
    "ConfigureIM\0im\0CreateIC\0"
    "QDBusPendingReply<int,uint,uint,uint,uint>\0"
    "QDBusReply<int>\0uint&\0keyval1\0state1\0"
    "keyval2\0state2\0CreateICv2\0"
    "QDBusPendingReply<int,bool,uint,uint,uint,uint>\0"
    "appname\0bool&\0enable\0CreateICv3\0pid\0"
    "Exit\0GetCurrentIM\0QDBusPendingReply<QString>\0"
    "GetCurrentState\0QDBusPendingReply<int>\0"
    "GetCurrentUI\0GetIMAddon\0GetIMByIndex\0"
    "index\0InactivateIM\0ReloadAddonConfig\0"
    "ReloadConfig\0ResetIMList\0Restart\0"
    "SetCurrentIM\0SwitchIM\0ToggleIM\0CurrentIM\0"
    "IMList\0FcitxQtInputMethodItemList"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FcitxInputMethodProxy[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      25,   14, // methods
       2,  216, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,  139,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,  140,    2, 0x0a /* Public */,
       5,    0,  141,    2, 0x0a /* Public */,
       6,    1,  142,    2, 0x0a /* Public */,
       8,    1,  145,    2, 0x0a /* Public */,
      10,    0,  148,    2, 0x0a /* Public */,
      10,    4,  149,    2, 0x0a /* Public */,
      18,    1,  158,    2, 0x0a /* Public */,
      18,    6,  161,    2, 0x0a /* Public */,
      23,    2,  174,    2, 0x0a /* Public */,
      23,    7,  179,    2, 0x0a /* Public */,
      25,    0,  194,    2, 0x0a /* Public */,
      26,    0,  195,    2, 0x0a /* Public */,
      28,    0,  196,    2, 0x0a /* Public */,
      30,    0,  197,    2, 0x0a /* Public */,
      31,    1,  198,    2, 0x0a /* Public */,
      32,    1,  201,    2, 0x0a /* Public */,
      34,    0,  204,    2, 0x0a /* Public */,
      35,    1,  205,    2, 0x0a /* Public */,
      36,    0,  208,    2, 0x0a /* Public */,
      37,    0,  209,    2, 0x0a /* Public */,
      38,    0,  210,    2, 0x0a /* Public */,
      39,    1,  211,    2, 0x0a /* Public */,
      40,    0,  214,    2, 0x0a /* Public */,
      41,    0,  215,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    0x80000000 | 4,
    0x80000000 | 4,
    0x80000000 | 4, QMetaType::QString,    7,
    0x80000000 | 4, QMetaType::QString,    9,
    0x80000000 | 11,
    0x80000000 | 12, 0x80000000 | 13, 0x80000000 | 13, 0x80000000 | 13, 0x80000000 | 13,   14,   15,   16,   17,
    0x80000000 | 19, QMetaType::QString,   20,
    0x80000000 | 12, QMetaType::QString, 0x80000000 | 21, 0x80000000 | 13, 0x80000000 | 13, 0x80000000 | 13, 0x80000000 | 13,   20,   22,   14,   15,   16,   17,
    0x80000000 | 19, QMetaType::QString, QMetaType::Int,   20,   24,
    0x80000000 | 12, QMetaType::QString, QMetaType::Int, 0x80000000 | 21, 0x80000000 | 13, 0x80000000 | 13, 0x80000000 | 13, 0x80000000 | 13,   20,   24,   22,   14,   15,   16,   17,
    0x80000000 | 4,
    0x80000000 | 27,
    0x80000000 | 29,
    0x80000000 | 27,
    0x80000000 | 27, QMetaType::QString,    9,
    0x80000000 | 27, QMetaType::Int,   33,
    0x80000000 | 4,
    0x80000000 | 4, QMetaType::QString,    7,
    0x80000000 | 4,
    0x80000000 | 4,
    0x80000000 | 4,
    0x80000000 | 4, QMetaType::QString,    9,
    0x80000000 | 4,
    0x80000000 | 4,

 // properties: name, type, flags
      42, QMetaType::QString, 0x00095103,
      43, 0x80000000 | 44, 0x0009510b,

       0        // eod
};

void FcitxInputMethodProxy::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<FcitxInputMethodProxy *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->ReloadConfigUI(); break;
        case 1: { QDBusPendingReply<> _r = _t->ActivateIM();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 2: { QDBusPendingReply<> _r = _t->Configure();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 3: { QDBusPendingReply<> _r = _t->ConfigureAddon((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 4: { QDBusPendingReply<> _r = _t->ConfigureIM((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 5: { QDBusPendingReply<int,uint,uint,uint,uint> _r = _t->CreateIC();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int,uint,uint,uint,uint>*>(_a[0]) = std::move(_r); }  break;
        case 6: { QDBusReply<int> _r = _t->CreateIC((*reinterpret_cast< uint(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2])),(*reinterpret_cast< uint(*)>(_a[3])),(*reinterpret_cast< uint(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 7: { QDBusPendingReply<int,bool,uint,uint,uint,uint> _r = _t->CreateICv2((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int,bool,uint,uint,uint,uint>*>(_a[0]) = std::move(_r); }  break;
        case 8: { QDBusReply<int> _r = _t->CreateICv2((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2])),(*reinterpret_cast< uint(*)>(_a[3])),(*reinterpret_cast< uint(*)>(_a[4])),(*reinterpret_cast< uint(*)>(_a[5])),(*reinterpret_cast< uint(*)>(_a[6])));
            if (_a[0]) *reinterpret_cast< QDBusReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 9: { QDBusPendingReply<int,bool,uint,uint,uint,uint> _r = _t->CreateICv3((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int,bool,uint,uint,uint,uint>*>(_a[0]) = std::move(_r); }  break;
        case 10: { QDBusReply<int> _r = _t->CreateICv3((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3])),(*reinterpret_cast< uint(*)>(_a[4])),(*reinterpret_cast< uint(*)>(_a[5])),(*reinterpret_cast< uint(*)>(_a[6])),(*reinterpret_cast< uint(*)>(_a[7])));
            if (_a[0]) *reinterpret_cast< QDBusReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 11: { QDBusPendingReply<> _r = _t->Exit();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 12: { QDBusPendingReply<QString> _r = _t->GetCurrentIM();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 13: { QDBusPendingReply<int> _r = _t->GetCurrentState();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 14: { QDBusPendingReply<QString> _r = _t->GetCurrentUI();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 15: { QDBusPendingReply<QString> _r = _t->GetIMAddon((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 16: { QDBusPendingReply<QString> _r = _t->GetIMByIndex((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 17: { QDBusPendingReply<> _r = _t->InactivateIM();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 18: { QDBusPendingReply<> _r = _t->ReloadAddonConfig((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 19: { QDBusPendingReply<> _r = _t->ReloadConfig();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 20: { QDBusPendingReply<> _r = _t->ResetIMList();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 21: { QDBusPendingReply<> _r = _t->Restart();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 22: { QDBusPendingReply<> _r = _t->SetCurrentIM((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 23: { QDBusPendingReply<> _r = _t->SwitchIM();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 24: { QDBusPendingReply<> _r = _t->ToggleIM();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (FcitxInputMethodProxy::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&FcitxInputMethodProxy::ReloadConfigUI)) {
                *result = 0;
                return;
            }
        }
    } else if (_c == QMetaObject::RegisterPropertyMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 1:
            *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< FcitxQtInputMethodItemList >(); break;
        }
    }

#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        auto *_t = static_cast<FcitxInputMethodProxy *>(_o);
        (void)_t;
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QString*>(_v) = _t->currentIM(); break;
        case 1: *reinterpret_cast< FcitxQtInputMethodItemList*>(_v) = _t->iMList(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        auto *_t = static_cast<FcitxInputMethodProxy *>(_o);
        (void)_t;
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setCurrentIM(*reinterpret_cast< QString*>(_v)); break;
        case 1: _t->setIMList(*reinterpret_cast< FcitxQtInputMethodItemList*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

QT_INIT_METAOBJECT const QMetaObject FcitxInputMethodProxy::staticMetaObject = { {
    QMetaObject::SuperData::link<QDBusAbstractInterface::staticMetaObject>(),
    qt_meta_stringdata_FcitxInputMethodProxy.data,
    qt_meta_data_FcitxInputMethodProxy,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *FcitxInputMethodProxy::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FcitxInputMethodProxy::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FcitxInputMethodProxy.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int FcitxInputMethodProxy::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 25)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 25;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 25)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 25;
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 2;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void FcitxInputMethodProxy::ReloadConfigUI()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
